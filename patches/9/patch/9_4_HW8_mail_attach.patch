Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java	(date 1493414685000)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java	(revision )
@@ -17,11 +17,11 @@
 
     private static final ExecutorService mailExecutor = Executors.newFixedThreadPool(8);
 
-    public static GroupResult sendBulk(final Set<Addressee> addressees, final String subject, final String body) {
+    public static GroupResult sendBulk(final Set<Addressee> addressees, final String subject, final String body, List<Attach> attaches) {
         final CompletionService<MailResult> completionService = new ExecutorCompletionService<>(mailExecutor);
 
         List<Future<MailResult>> futures = StreamEx.of(addressees)
-                .map(addressee -> completionService.submit(() -> MailSender.sendTo(addressee, subject, body)))
+                .map(addressee -> completionService.submit(() -> MailSender.sendTo(addressee, subject, body, attaches)))
                 .toList();
 
         return new Callable<GroupResult>() {
Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceImpl.java	(date 1493414685000)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceImpl.java	(revision )
@@ -15,11 +15,11 @@
 
     @Override
     public String sendToGroup(Set<Addressee> to, Set<Addressee> cc, String subject, String body, List<Attach> attaches) throws WebStateException {
-        return MailSender.sendToGroup(to, cc, subject, body);
+        return MailSender.sendToGroup(to, cc, subject, body, attaches);
     }
 
     @Override
     public GroupResult sendBulk(Set<Addressee> to, String subject, String body, List<Attach> attaches) throws WebStateException {
-        return MailServiceExecutor.sendBulk(to, subject, body);
+        return MailServiceExecutor.sendBulk(to, subject, body, attaches);
     }
 }
\ No newline at end of file
Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailSender.java	(date 1493414685000)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailSender.java	(revision )
@@ -4,29 +4,28 @@
 import com.google.common.collect.ImmutableSet;
 import lombok.extern.slf4j.Slf4j;
 import lombok.val;
-import org.apache.commons.mail.EmailException;
 import ru.javaops.masterjava.ExceptionType;
 import ru.javaops.masterjava.persist.DBIProvider;
 import ru.javaops.masterjava.service.mail.persist.MailCase;
 import ru.javaops.masterjava.service.mail.persist.MailCaseDao;
 import ru.javaops.web.WebStateException;
 
+import javax.mail.internet.MimeUtility;
+import java.io.UnsupportedEncodingException;
+import java.nio.charset.StandardCharsets;
+import java.util.List;
 import java.util.Set;
 
-/**
- * gkislin
- * 15.11.2016
- */
 @Slf4j
 public class MailSender {
     private static final MailCaseDao MAIL_CASE_DAO = DBIProvider.getDao(MailCaseDao.class);
 
-    static MailResult sendTo(Addressee to, String subject, String body) throws WebStateException {
-        val state = sendToGroup(ImmutableSet.of(to), ImmutableSet.of(), subject, body);
+    static MailResult sendTo(Addressee to, String subject, String body, List<Attach> attaches) throws WebStateException {
+        val state = sendToGroup(ImmutableSet.of(to), ImmutableSet.of(), subject, body, attaches);
         return new MailResult(to.getEmail(), state);
     }
 
-    static String sendToGroup(Set<Addressee> to, Set<Addressee> cc, String subject, String body) throws WebStateException {
+    static String sendToGroup(Set<Addressee> to, Set<Addressee> cc, String subject, String body, List<Attach> attaches) throws WebStateException {
         log.info("Send mail to \'" + to + "\' cc \'" + cc + "\' subject \'" + subject + (log.isDebugEnabled() ? "\nbody=" + body : ""));
         String state = MailResult.OK;
         try {
@@ -39,11 +38,14 @@
             for (Addressee addressee : cc) {
                 email.addCc(addressee.getEmail(), addressee.getName());
             }
+            for (Attach attach : attaches) {
+                email.attach(attach.getDataHandler().getDataSource(), encodeWord(attach.getName()), null);
+            }
 
             //            https://yandex.ru/blog/company/66296
             email.setHeaders(ImmutableMap.of("List-Unsubscribe", "<mailto:masterjava@javaops.ru?subject=Unsubscribe&body=Unsubscribe>"));
             email.send();
-        } catch (EmailException e) {
+        } catch (Exception e) {
             log.error(e.getMessage(), e);
             state = e.getMessage();
         }
@@ -56,4 +58,11 @@
         log.info("Sent with state: " + state);
         return state;
     }
+
+    public static String encodeWord(String word) throws UnsupportedEncodingException {
+        if (word == null) {
+            return null;
+        }
+        return MimeUtility.encodeWord(word, StandardCharsets.UTF_8.name(), null);
+    }
 }
