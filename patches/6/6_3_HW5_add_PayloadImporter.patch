Index: web/export/src/main/java/ru/javaops/masterjava/export/PayloadImporter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/export/src/main/java/ru/javaops/masterjava/export/PayloadImporter.java	(revision 87cf39b88559e43665cc79d2acb9c0b41bc15328)
+++ web/export/src/main/java/ru/javaops/masterjava/export/PayloadImporter.java	(revision 87cf39b88559e43665cc79d2acb9c0b41bc15328)
@@ -0,0 +1,28 @@
+package ru.javaops.masterjava.export;
+
+import lombok.Value;
+import ru.javaops.masterjava.xml.util.StaxStreamProcessor;
+
+import javax.xml.stream.XMLStreamException;
+import java.io.InputStream;
+import java.util.List;
+
+public class PayloadImporter {
+    private final UserImporter userImporter = new UserImporter();
+
+    @Value
+    public static class FailedEmail {
+        public String emailOrRange;
+        public String reason;
+
+        @Override
+        public String toString() {
+            return emailOrRange + " : " + reason;
+        }
+    }
+
+    public List<PayloadImporter.FailedEmail> process(InputStream is, int chunkSize) throws XMLStreamException {
+        final StaxStreamProcessor processor = new StaxStreamProcessor(is);
+        return userImporter.process(processor, chunkSize);
+    }
+}
Index: web/export/src/main/java/ru/javaops/masterjava/export/UploadServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/export/src/main/java/ru/javaops/masterjava/export/UploadServlet.java	(date 1491596252000)
+++ web/export/src/main/java/ru/javaops/masterjava/export/UploadServlet.java	(date 1491596439000)
@@ -23,7 +23,7 @@
 public class UploadServlet extends HttpServlet {
     private static final int CHUNK_SIZE = 2000;
 
-    private final UserExport userExport = new UserExport();
+    private final PayloadImporter payloadImporter = new PayloadImporter();
 
     @Override
     protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
@@ -42,7 +42,7 @@
             } else {
                 Part filePart = req.getPart("fileToUpload");
                 try (InputStream is = filePart.getInputStream()) {
-                    List<UserExport.FailedEmail> failed = userExport.process(is, chunkSize);
+                    List<PayloadImporter.FailedEmail> failed = payloadImporter.process(is, chunkSize);
                     log.info("Failed users: " + failed);
                     final WebContext webContext =
                             new WebContext(req, resp, req.getServletContext(), req.getLocale(),
Index: web/export/src/main/java/ru/javaops/masterjava/export/UserExport.java
===================================================================
--- web/export/src/main/java/ru/javaops/masterjava/export/UserExport.java	(date 1491596252000)
+++ web/export/src/main/java/ru/javaops/masterjava/export/UserImporter.java	(date 1491596439000)
@@ -1,8 +1,8 @@
 package ru.javaops.masterjava.export;
 
-import lombok.Value;
 import lombok.extern.slf4j.Slf4j;
 import one.util.streamex.StreamEx;
+import ru.javaops.masterjava.export.PayloadImporter.FailedEmail;
 import ru.javaops.masterjava.persist.DBIProvider;
 import ru.javaops.masterjava.persist.dao.UserDao;
 import ru.javaops.masterjava.persist.model.User;
@@ -11,7 +11,6 @@
 
 import javax.xml.stream.XMLStreamException;
 import javax.xml.stream.events.XMLEvent;
-import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.Callable;
@@ -24,24 +23,13 @@
  * 14.10.2016
  */
 @Slf4j
-public class UserExport {
+public class UserImporter {
 
     private static final int NUMBER_THREADS = 4;
     private final ExecutorService executorService = Executors.newFixedThreadPool(NUMBER_THREADS);
     private final UserDao userDao = DBIProvider.getDao(UserDao.class);
 
-    @Value
-    public static class FailedEmail {
-        public String emailOrRange;
-        public String reason;
-
-        @Override
-        public String toString() {
-            return emailOrRange + " : " + reason;
-        }
-    }
-
-    public List<FailedEmail> process(final InputStream is, int chunkSize) throws XMLStreamException {
+    public List<FailedEmail> process(StaxStreamProcessor processor, int chunkSize) throws XMLStreamException {
         log.info("Start proseccing with chunkSize=" + chunkSize);
 
         return new Callable<List<FailedEmail>>() {
@@ -64,7 +52,6 @@
 
                 int id = userDao.getSeqAndSkip(chunkSize);
                 List<User> chunk = new ArrayList<>(chunkSize);
-                final StaxStreamProcessor processor = new StaxStreamProcessor(is);
 
                 while (processor.doUntil(XMLEvent.START_ELEMENT, "User")) {
                     final String email = processor.getAttribute("email");
Index: web/export/src/main/webapp/WEB-INF/templates/result.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/export/src/main/webapp/WEB-INF/templates/result.html	(date 1491596252000)
+++ web/export/src/main/webapp/WEB-INF/templates/result.html	(date 1491596439000)
@@ -7,7 +7,7 @@
 <h4><a href="">Export XML</a></h4>
 <h3>Failed users</h3>
 <ul>
-    <!--/*@thymesVar id="failed" type="java.util.List<ru.javaops.masterjava.export.UserExport$FailedEmail>"*/-->
+    <!--/*@thymesVar id="failed" type="java.util.List<ru.javaops.masterjava.export.PayloadImporter$FailedEmail>"*/-->
     <li th:each="fail: ${failed}" th:text="${fail}"></li>
 </ul>
 </body>
